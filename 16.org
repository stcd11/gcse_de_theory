#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+BEGIN_COMMENT
#+STYLE: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+STYLE: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+END_COMMENT
#+OPTIONS: f:nil author:nil num:1 creator:nil timestamp:nil 
#+TITLE: Use of design strategies
#+AUTHOR: Paul Dougall

#+BEGIN_HTML
<div class=ribbon>
<a href="https://github.com/stsb11/gcse_theory">Fork me on GitHub</a>
</div>
<center>
</center>
#+END_HTML

* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

e* Introduction
[[file:img/pic.jpg]]
:PROPERTIES:
:HTML_CONTAINER_CLASS: intro
:END:
** What are PIC chips?
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:
Peripheral Interface Controllers are small silicon chips which can be programmed to perform useful tasks.
In school, we tend to use Genie branded chips, like the C08 model you will use in this project. Others (e.g. PICAXE) are available.
PIC chips allow you connect different inputs (e.g. switches) and outputs (e.g. LEDs, motors and speakers), and to control them using flowcharts.
Chips such as these can be found everywhere in consumer electronic products, from toasters to cars. 

While they might not look like much, there is more computational power in a single PIC chip used in school than there was in the space shuttle that went to the moon in the 60's!
** When would I use a PIC chip?
Imagine you wanted to make a flashing bike light; using an LED and a switch alone, you'd need to manually push and release the button to get the flashing effect. A PIC chip could be programmed to turn the LED off and on once a second.
In a board game, you might want to have an electronic dice to roll numbers from 1 to 6 for you. 
In a car, a circuit is needed to ensure that the airbags only deploy when there is a sudden change in speed, AND the passenger is wearing their seatbelt, AND the front or rear bumper has been struck. PIC chips can carry out their instructions very quickly, performing around 1000 instructions per second - as such, they can react far more quickly than a person can. 

When developing new designs, you must must consider how previous designs were tackled. 
This information can help inform the current design decisions.
* Collaboration
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:

Rarely would one person work on a design in isolation. More likely they are working as part of team. 
This allows people to 'bounce' ideas off each other.

You could use a design method called SCAMPER
- Substitute
- Combine
- Adapt
- Modify
- Put
- Eliminate
- Reverse

Here is a video that explains the stages involved.

#+BEGIN_HTML
<iframe width="800" height="500" src="https://www.youtube.com/embed/G8w0rJhztJ4" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
#+END_HTML
* User centred design
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
This could be done by:

- having user requirements as a starting point for your design ideas
- asking your user to draw out some ideas or make a simple model for you
- modelling your ideas in 3D to gain user feedback to aid your development
- using [[http://personal.cityu.edu.hk/~meachan/Online%2520Anthropometry/Chapter1/Ch1-1.htm][anthropometric data]] from your user to influence your design ideas.

#+BEGIN_HTML
<iframe width="800" height="500" src="https://www.youtube.com/embed/UvK6T8Jl7ao" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
#+END_HTML

* System thinking
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
The simplest way is to create a flowchart but start backwards.
1. What do you want your product to or achieve (output)?
2. How is it going to achieve that function (process)?
3. What inputs or energies would it need to do that (input)?
#+BEGIN_HTML
<iframe width="800" height="500" src="https://www.youtube.com/embed/lhbLNBqhQkc" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
#+END_HTML
* Exam questions
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
- Create a flowchart for making a cup of tea. Develop it further into a systems diagram including inputs, processes and outputs.
- Discuss which design strategies a design company might use when designing a pair of headphones. 
